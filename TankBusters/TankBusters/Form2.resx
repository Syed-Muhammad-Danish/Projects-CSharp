<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rIbd8J8DTe+l86xadX3F86cO8/JOziz5tkA8dyW6x8dr/pjIGIDDuXzpEE7O+k7dsPmMEv1LIMPi/wA5
        fxnLPAiOTl7/AIe8MyzLwIiOCz8hmZ4EcDgjnLOvPTeHhmYiI4I4231ffoeVllmeBDDDENvpb6bMszMz
        ERwRHG+tnUy8MzMoYh4ON9Q4erZmZmZiGGGGGIjpesnjZeHhmZZZZiIhi2GG23nfR2Z52eGZmZiIjgbY
        6d43p3jbeHhbZZZZZZm2IbbYhthht53jbfSXhlll4Z4IeBhththtt4GvY7t33MdkHkSRPIkgO4n8XfN9
        rsbjn1ZjRZ9W2222zbMs2zPTsWw2ww222z/oRRkadkA88Udx3TN/d43fQXeLzh/9h8O9/D2ZeT0f/UC/
        uOW2222yyy2y28PO222wxwNttttvAA1HLvm+1mOxz922228LbLNsszw9W2w222287bbaG/orfzQ/tEId
        9M+i22222222W22230i2G22222222222222222W31t53jbbbbbbbbbbbbbbbfwdttttt423jbbbbbedt
        tt/D22222222238ned422223nf8Ajv/aAAwDAQACAAMAAAAQf/8A/wD/ADb6CSzvX/8A/wD/AP8A/wDu
        +K6hjASy5o7Pc/8A/wDyuNOSaWeXcbANo/8A+M7Qml017Y5wXFmi7r/bg1kvdcJvdgOd32wzLR12fe/M
        ZI9fM+9nHj5UnduNvPeP/PvPus30zmesuffN9fMNdeO9930V9c9cd8sMMdNet/8AH9XLnDHTPrfzz7nb
        bzXNTjnT/wB9uzK9GQQx++wc73ffXd7NLHZ+1mT7/c8244PPLHPPPPPFZ28f470ywM+9+/8AfMB/880s
        eOf9uuftu8N/d9ec3fsvf+8Md9vvcev/AHrBRT7/AE2wyw7780w1w2fba644/wCfd9OM+d/OPnC313s8
        9tcOMsMctemHCDV0ktc4+9te+uOVVQ56TCl23GFnmuOmmUBo/wDqGw4xl5dd59lkiuLP/wD/AMZqQBjA
        BQAZIsf/AP8A9/772tkshmli1/8A/v8Ajj/fj/jDDD//AP8A/wD/AP8A/wD/xAAfEQADAAEDBQAAAAAA
        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
        nRPoD0JJ0N/gerNifUqJ1kkkkkkkkn83/9k=
</value>
  </data>
</root>